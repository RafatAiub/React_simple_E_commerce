{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanvi\\\\OneDrive\\\\Desktop\\\\project\\\\React_simple_E_commerce\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\"; //import { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const history = useNavigate();\n  useEffect(() => {\n    if (localStorage.getItem('user-info')) {\n      history(\"/add\");\n    }\n  }, []);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  async function login() {\n    let item = {\n      email,\n      password\n    };\n    let result = await fetch(\"http://127.0.0.1:8000/api/signin\", {\n      method: 'POST',\n      body: JSON.stringify(item),\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"Accept\": 'application/json'\n      }\n    });\n    result = await result.json();\n\n    if (result.status === 200) {\n      localStorage.setItem(\"user-info\", JSON.stringify(result.check));\n      history(\"/add\");\n    } else if (result.status === 404) {\n      setMessage(result.error);\n    } //localStorage.setItem(\"user-info\", JSON.stringify(result));\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-6 offset-sm-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"form-control\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 134\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"form-control\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 146\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"3pFlfs2+ZETKPC8i6BO80tueYSU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/tanvi/OneDrive/Desktop/project/React_simple_E_commerce/src/components/Login.js"],"names":["React","useState","useEffect","useNavigate","Header","Login","history","localStorage","getItem","email","setEmail","password","setPassword","message","setMessage","login","item","result","fetch","method","body","JSON","stringify","headers","json","status","setItem","check","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\n\r\n//import { BrowserRouter as Router, Link, Route } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const history = useNavigate();\r\n  useEffect(() => {\r\n    if (localStorage.getItem('user-info')) {\r\n      history(\"/add\");\r\n    }\r\n\r\n  }, [])\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n\r\n  async function login() {\r\n    let item = { email, password };\r\n\r\n    let result = await fetch(\"http://127.0.0.1:8000/api/signin\",\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(item),\r\n        headers: {\r\n          \"Content-Type\": 'application/json',\r\n          \"Accept\": 'application/json'\r\n        }\r\n      })\r\n\r\n    result = await result.json();\r\n\r\n    if (result.status === 200) {\r\n      localStorage.setItem(\"user-info\", JSON.stringify(result.check));\r\n      history(\"/add\")\r\n    }\r\n    else if(result.status === 404)\r\n    {\r\n      setMessage(result.error)\r\n    }\r\n\r\n    //localStorage.setItem(\"user-info\", JSON.stringify(result));\r\n    \r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <div className=\"col-sm-6 offset-sm-3\" >\r\n\r\n        <h1>Login</h1>\r\n        <h1>{message}</h1>\r\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} className=\"form-control\" placeholder=\"Email\" /> <br />\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"form-control\" placeholder=\"Password\" /> <br />\r\n        <button onClick={login} className=\"btn btn-primary\">Login</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}