{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanvi\\\\OneDrive\\\\Desktop\\\\project\\\\React_simple_E_commerce\\\\src\\\\components\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport \"./cart.css\";\nimport { products } from \"./products\";\nimport ContextCart from \"./ContextCart\";\nimport { reducer } from \"./reducer\";\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst initialState = {\n  item: products,\n  totalAmount: 0,\n  totalItem: 0\n};\n\nconst Cart = () => {\n  _s();\n\n  // const [item, setItem] = useState(products);\n  const [state, dispatch] = useReducer(reducer, initialState); // to delete the indv. elements from an Item Cart\n\n  const removeItem = id => {\n    return dispatch({\n      type: \"REMOVE_ITEM\",\n      payload: id\n    });\n  }; // clear the cart\n\n\n  const clearCart = () => {\n    return dispatch({\n      type: \"CLEAR_CART\"\n    });\n  }; // increment the item\n\n\n  const increment = id => {\n    return dispatch({\n      type: \"INCREMENT\",\n      payload: id\n    });\n  }; // decrement the item\n\n\n  const decrement = id => {\n    return dispatch({\n      type: \"DECREMENT\",\n      payload: id\n    });\n  }; // we will use the useEffect to update the data\n\n\n  useEffect(() => {\n    dispatch({\n      type: \"GET_TOTAL\"\n    }); // console.log(\"Awesome\");\n  }, [state.item]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: { ...state,\n      removeItem,\n      clearCart,\n      increment,\n      decrement\n    },\n    children: /*#__PURE__*/_jsxDEV(ContextCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/tanvi/OneDrive/Desktop/project/React_simple_E_commerce/src/components/Cart.js"],"names":["React","createContext","useReducer","useEffect","products","ContextCart","reducer","Scrollbars","CartContext","initialState","item","totalAmount","totalItem","Cart","state","dispatch","removeItem","id","type","payload","clearCart","increment","decrement"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,OAAO,YAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;AAEP,MAAMQ,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAEN,QADa;AAEnBO,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACI,OAAD,EAAUG,YAAV,CAApC,CAFiB,CAIjB;;AACA,QAAMO,UAAU,GAAIC,EAAD,IAAQ;AACzB,WAAOF,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,aADQ;AAEdC,MAAAA,OAAO,EAAEF;AAFK,KAAD,CAAf;AAID,GALD,CALiB,CAYjB;;;AACA,QAAMG,SAAS,GAAG,MAAM;AACtB,WAAOL,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAf;AACD,GAFD,CAbiB,CAiBjB;;;AACA,QAAMG,SAAS,GAAIJ,EAAD,IAAQ;AACxB,WAAOF,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,WADQ;AAEdC,MAAAA,OAAO,EAAEF;AAFK,KAAD,CAAf;AAID,GALD,CAlBiB,CAyBjB;;;AACA,QAAMK,SAAS,GAAIL,EAAD,IAAQ;AACxB,WAAOF,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAE,WADQ;AAEdC,MAAAA,OAAO,EAAEF;AAFK,KAAD,CAAf;AAID,GALD,CA1BiB,CAiCjB;;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR,CADc,CAEd;AACD,GAHQ,EAGN,CAACJ,KAAK,CAACJ,IAAP,CAHM,CAAT;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE,EAAE,GAAGI,KAAL;AAAYE,MAAAA,UAAZ;AAAwBI,MAAAA,SAAxB;AAAmCC,MAAAA,SAAnC;AAA8CC,MAAAA;AAA9C,KADT;AAAA,2BAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7CD;;GAAMT,I;;KAAAA,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport \"./cart.css\";\r\nimport { products } from \"./products\";\r\nimport ContextCart from \"./ContextCart\";\r\nimport { reducer } from \"./reducer\";\r\nimport {Scrollbars} from 'react-custom-scrollbars-2';\r\nexport const CartContext = createContext();\r\n\r\nconst initialState = {\r\n  item: products,\r\n  totalAmount: 0,\r\n  totalItem: 0,\r\n};\r\n\r\nconst Cart = () => {\r\n  // const [item, setItem] = useState(products);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // to delete the indv. elements from an Item Cart\r\n  const removeItem = (id) => {\r\n    return dispatch({\r\n      type: \"REMOVE_ITEM\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  // clear the cart\r\n  const clearCart = () => {\r\n    return dispatch({ type: \"CLEAR_CART\" });\r\n  };\r\n\r\n  // increment the item\r\n  const increment = (id) => {\r\n    return dispatch({\r\n      type: \"INCREMENT\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  // decrement the item\r\n  const decrement = (id) => {\r\n    return dispatch({\r\n      type: \"DECREMENT\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  // we will use the useEffect to update the data\r\n  useEffect(() => {\r\n    dispatch({ type: \"GET_TOTAL\" });\r\n    // console.log(\"Awesome\");\r\n  }, [state.item]);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ ...state, removeItem, clearCart, increment, decrement }}>\r\n      <ContextCart />\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}